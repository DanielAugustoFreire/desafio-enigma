{
  "openapi": "3.0.0",
  "info": {
    "title": "ENIGMA",
    "description": "Operacao Enigma",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000/"
    }
  ],
  "paths": {
    "/users/": {
      "get": {
        "tags": [
          "User - CRUD"
        ],
        "summary": "Leitura dos Usuários",
        "description": "Lista todos os usuários cadastrados no sistema.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "User - CRUD"
        ],
        "summary": "Cadatro de Usuário",
        "description": "Permite o cadastro de novos usuários no sistema.",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "senha": {
                    "type": "string"
                  }
                },
                "required": [
                  "nome",
                  "email",
                  "senha"
                ]
              },
              "example": {
                "nome": "",
                "email": "",
                "senha": ""
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "tags": [
          "User - CRUD"
        ],
        "summary": "Atualização de Usuário",
        "description": "Permite a edição do nome de um usuário específico, excluindo o usuário MESTRE.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": {
                    "type": "string"
                  }
                },
                "required": [
                  "nome"
                ]
              },
              "example": {
                "nome": ""
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User - CRUD"
        ],
        "summary": "Deleçao de Usuário",
        "description": "Permite deletar um usuário, exceto o usuário MESTRE.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/": {
      "post": {
        "tags": [
          "Autenticacao"
        ],
        "summary": "Autenticação de Usuário",
        "description": "Permite que com o email e senha, o usuário autentique-se no sistema.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "senha": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "senha"
                ]
              },
              "example": {
                "email": "danielaugustosant@hotmail.com",
                "senha": "12345"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Autenticacao"
        ],
        "summary": "Validacao de Autenticacao",
        "description": "Middleware requisita ao back se esta tudo conforme",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/decrypt": {
      "post": {
        "tags": [
          "Key"
        ],
        "summary": "Descriptografar",
        "description": "Este endpoint recebe um arquivo criptografado e uma string com a primeira palavra descriptografada do arquivo: -Se a string estiver vazia, o sistema deve tentar descriptografar o arquivo usando a chave atual. -A nova chave resultante deve ser registrada no banco de dados e substituir a chave anterior como a chave atual.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mensagem": {
                    "type": "string"
                  },
                  "chave": {
                    "type": "string"
                  }
                },
                "required": [
                  "mensagem"
                ]
              },
              "example": {
                "mensagem": "",
                "chave": ""
              }
            }
          }
        }
      }
    },
    "/current-key": {
      "get": {
        "tags": [
          "Key"
        ],
        "summary": "Obter chave atual",
        "description": "Retorna a chave atual do sistema.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/keys": {
      "get": {
        "tags": [
          "Key"
        ],
        "summary": "Listar chaves",
        "description": "Retorna uma lista de chaves registradas no sistema.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}